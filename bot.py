import telebot
from telebot import types
import json
import os

TOKEN = os.getenv("TOKEN")
CHANNEL_ID = -1002703116591
ADMIN_ID = 5611365099

bot = telebot.TeleBot(TOKEN)
CONFIG_FILE = "config.json"
user_state = {}

if not os.path.exists(CONFIG_FILE):
    with open(CONFIG_FILE, "w", encoding="utf-8") as f:
        json.dump({
            "sponsors": [],
            "join_link": "",
            "post_text": "üëá –ü—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ —ñ –Ω–∞—Ç–∏—Å–Ω–∏ ¬´–í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É¬ª",
            "button_labels": {
                "join_team": "–í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É",
                "sponsor": "–°–ø–æ–Ω—Å–æ—Ä"
            }
        }, f, indent=2)

def load_data():
    with open(CONFIG_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

def save_data(data):
    with open(CONFIG_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2)

@bot.message_handler(commands=["start"])
def start(msg):
    if msg.from_user.id != ADMIN_ID:
        return
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("‚ûï –î–æ–¥–∞—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞", "üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞")
    keyboard.add("‚úè –ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–Ω—Å–æ—Ä–∞", "üìù –ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–∫—Å—Ç")
    keyboard.add("üîò –ó–º—ñ–Ω–∏—Ç–∏ –∫–Ω–æ–ø–∫—É", "üîó –ó–º—ñ–Ω–∏—Ç–∏ –ª—ñ–Ω–∫ –Ω–∞ –≤—Å—Ç—É–ø")
    keyboard.add("üöÄ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç", "üì§ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª")
    bot.send_message(msg.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=keyboard)

@bot.message_handler(func=lambda m: True)
def handle(msg):
    if msg.from_user.id != ADMIN_ID:
        return

    text = msg.text
    data = load_data()

    if text == "‚ûï –î–æ–¥–∞—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞":
        user_state[msg.chat.id] = "add_sponsor"
        bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞:")
    elif text == "üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞":
    user_state[msg.chat.id] = "delete_sponsor"
    sponsors = "\n".join([f"{i+1}. {link}" for i, link in enumerate(data["sponsors"])])
    bot.send_message(msg.chat.id, f"–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–ø–æ–Ω—Å–æ—Ä–∞, —è–∫–æ–≥–æ —Ö–æ—á–µ—à –≤–∏–¥–∞–ª–∏—Ç–∏:\n{sponsors}")
    elif text == "‚úè –ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–Ω—Å–æ—Ä–∞":
        user_state[msg.chat.id] = "edit_sponsor"
        sponsors = "\n".join([f"{i+1}. {link}" for i, link in enumerate(data["sponsors"])])
        bot.send_message(msg.chat.id, f"–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —ñ –Ω–æ–≤–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è (—á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª):
{sponsors}")
    elif text == "üìù –ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–∫—Å—Ç":
        user_state[msg.chat.id] = "edit_text"
        bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç—É (–º–æ–∂–Ω–∞ –∑ –µ–º–æ–¥–∑—ñ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏):")
    elif text == "üîò –ó–º—ñ–Ω–∏—Ç–∏ –∫–Ω–æ–ø–∫—É":
        user_state[msg.chat.id] = "edit_buttons"
        bot.send_message(msg.chat.id, "–§–æ—Ä–º–∞—Ç: sponsor=–¢–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏, join=–¢–µ–∫—Å—Ç_–≤—Å—Ç—É–ø—É")
    elif text == "üîó –ó–º—ñ–Ω–∏—Ç–∏ –ª—ñ–Ω–∫ –Ω–∞ –≤—Å—Ç—É–ø":
        user_state[msg.chat.id] = "edit_join"
        bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–≤–∏–π –ª—ñ–Ω–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É':")
    elif text == "üöÄ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç" or text == "üì§ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª":
        markup = types.InlineKeyboardMarkup()
        for i, sponsor in enumerate(data["sponsors"]):
            label = f"{data['button_labels']['sponsor']} {i+1}"
            markup.add(types.InlineKeyboardButton(label, url=sponsor))
        join_label = data["button_labels"].get("join_team", "–í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É")
        markup.add(types.InlineKeyboardButton(join_label, url=data["join_link"]))

        if text == "üì§ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤ –∫–∞–Ω–∞–ª":
            try:
                bot.send_message(CHANNEL_ID, data["post_text"], reply_markup=markup, parse_mode="HTML")
                bot.send_message(msg.chat.id, "‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª—ñ.")
            except Exception as e:
                bot.send_message(msg.chat.id, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}")
        else:
            bot.send_message(msg.chat.id, data["post_text"], reply_markup=markup, parse_mode="HTML")
    else:
        state = user_state.get(msg.chat.id)
        if state == "add_sponsor":
            data["sponsors"].append(text)
            save_data(data)
            bot.send_message(msg.chat.id, "‚úÖ –°–ø–æ–Ω—Å–æ—Ä –¥–æ–¥–∞–Ω–∏–π.")
        elif state == "delete_sponsor":
            try:
                num = int(text) - 1
                deleted = data["sponsors"].pop(num)
                save_data(data)
                bot.send_message(msg.chat.id, f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ: {deleted}")
            except:
                bot.send_message(msg.chat.id, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä.")
        elif state == "edit_sponsor":
            try:
                parts = text.strip().split(" ", 1)
                num = int(parts[0]) - 1
                new_link = parts[1]
                data["sponsors"][num] = new_link
                save_data(data)
                bot.send_message(msg.chat.id, f"‚úÖ –°–ø–æ–Ω—Å–æ—Ä {num+1} –∑–º—ñ–Ω–µ–Ω–æ.")
            except:
                bot.send_message(msg.chat.id, "‚ùå –§–æ—Ä–º–∞—Ç: –Ω–æ–º–µ—Ä –Ω–æ–≤–µ_–ø–æ—Å–∏–ª–∞–Ω–Ω—è")
        elif state == "edit_text":
            data["post_text"] = text
            save_data(data)
            bot.send_message(msg.chat.id, "‚úÖ –¢–µ–∫—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ.")
        elif state == "edit_join":
            data["join_link"] = text.strip()
            save_data(data)
            bot.send_message(msg.chat.id, "‚úÖ –õ—ñ–Ω–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ.")
        elif state == "edit_buttons":
            try:
                parts = dict(x.strip().split("=") for x in text.strip().split(","))
                data["button_labels"].update(parts)
                save_data(data)
                bot.send_message(msg.chat.id, "‚úÖ –ù–∞–∑–≤–∏ –∫–Ω–æ–ø–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ.")
            except:
                bot.send_message(msg.chat.id, "‚ùå –§–æ—Ä–º–∞—Ç: sponsor=..., join=...")
        user_state[msg.chat.id] = None

bot.polling(none_stop=True)
