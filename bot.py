import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = os.getenv("TOKEN")
CHANNEL_ID = -1002703116591
ADMIN_ID = 5611365099
sponsors = []  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤–æ—ó —é–∑–µ—Ä–Ω–µ–π–º–∏ –∞–±–æ —ñ–Ω–≤–∞–π—Ç-–ª—ñ–Ω–∫–∏

bot = telebot.TeleBot(TOKEN)

# --- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---
@bot.message_handler(commands=['start'])
def start(msg):
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("üì§ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç", callback_data="create_post"),
        InlineKeyboardButton("‚ûï –î–æ–¥–∞—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞", callback_data="add_sponsor")
    )
    markup.row(
        InlineKeyboardButton("‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞", callback_data="remove_sponsor"),
        InlineKeyboardButton("üîó –í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É", callback_data="join_team")
    )
    bot.send_message(msg.chat.id, "üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä–∏ –¥—ñ—é:", reply_markup=markup)

# --- –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ ---
@bot.callback_query_handler(func=lambda call: True)
def handle(call):
    if call.data == "create_post":
        bot.send_message(call.message.chat.id, "üìù –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:")
        bot.register_next_step_handler(call.message, process_post_text)

    elif call.data == "join_team":
        check_subscriptions(call)

    elif call.data == "add_sponsor":
        bot.send_message(call.message.chat.id, "üîó –ù–∞–¥—ñ—à–ª–∏ @—é–∑–µ—Ä–Ω–µ–π–º –∞–±–æ –ª—ñ–Ω–∫ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞")
        bot.register_next_step_handler(call.message, add_sponsor)

    elif call.data == "remove_sponsor":
        if sponsors:
            markup = InlineKeyboardMarkup()
            for sponsor in sponsors:
                markup.add(InlineKeyboardButton(sponsor, callback_data=f"remove_{sponsor}"))
            bot.send_message(call.message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ–Ω—Å–æ—Ä–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:", reply_markup=markup)
        else:
            bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –ø—É—Å—Ç–∏–π")

    elif call.data.startswith("remove_"):
        sponsor_to_remove = call.data.replace("remove_", "")
        if sponsor_to_remove in sponsors:
            sponsors.remove(sponsor_to_remove)
            bot.send_message(call.message.chat.id, f"‚úÖ {sponsor_to_remove} –≤–∏–¥–∞–ª–µ–Ω–æ –∑—ñ —Å–ø–∏—Å–∫—É.")

# --- –û–±—Ä–æ–±–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç–∞ ---
def process_post_text(msg):
    post_text = msg.text
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîó –í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—É", callback_data="join_team"))

    try:
        bot.send_message(CHANNEL_ID, post_text, reply_markup=markup, parse_mode="HTML")
        bot.send_message(msg.chat.id, "‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ!")
    except Exception as e:
        bot.send_message(msg.chat.id, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}")

# --- –î–æ–¥–∞—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–∞ ---
def add_sponsor(msg):
    sponsor = msg.text.strip()
    if sponsor not in sponsors:
        sponsors.append(sponsor)
        bot.send_message(msg.chat.id, f"‚úÖ –î–æ–¥–∞–Ω–æ —Å–ø–æ–Ω—Å–æ—Ä–∞: {sponsor}")
    else:
        bot.send_message(msg.chat.id, "‚ö†Ô∏è –¶–µ–π —Å–ø–æ–Ω—Å–æ—Ä –≤–∂–µ —î —É —Å–ø–∏—Å–∫—É")

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å–æ–∫ ---
def check_subscriptions(call):
    user_id = call.from_user.id
    not_subscribed = []

    for sponsor in sponsors:
        try:
            sponsor_id = sponsor
            if sponsor.startswith("https://t.me/"):
                sponsor_id = sponsor.split("/")[-1]
                if sponsor_id.startswith("+"):
                    sponsor_id = sponsor  # —ñ–Ω–≤–∞–π—Ç-–ª—ñ–Ω–∫–∏ –∑–∞–ª–∏—à–∞—î–º–æ —è–∫ —î

            member = bot.get_chat_member(sponsor_id, user_id)
            if member.status not in ["member", "administrator", "creator"]:
                not_subscribed.append(sponsor)
        except:
            not_subscribed.append(sponsor)

    if not_subscribed:
        bot.answer_callback_query(call.id, "‚ùå –¢–∏ –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è –Ω–∞ –≤—Å—ñ—Ö —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤!", show_alert=True)
    else:
        bot.answer_callback_query(call.id)
        bot.send_message(call.message.chat.id, "‚úÖ –í—ñ—Ç–∞—é! –¢–∏ –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è –Ω–∞ –≤—Å—ñ—Ö —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤!")

bot.infinity_polling()
